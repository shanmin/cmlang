# CMakeList.txt: colang 的 CMake 项目，在此处包括源代码并定义
# 项目特定的逻辑。
#
cmake_minimum_required (VERSION 3.8)

# 如果支持，请为 MSVC 编译器启用热重载。
if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

include_directories(../llvm-18.1.1/llvm-project-llvmorg-18.1.1/llvm/include)
include_directories(../llvm-18.1.1/build/include)

link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86TargetMCA.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMMCA.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86Disassembler.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86AsmParser.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86CodeGen.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86Desc.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMX86Info.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMMCDisassembler.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMGlobalISel.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMSelectionDAG.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMCFGuard.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMAsmPrinter.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMOrcJIT.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMPasses.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMIRPrinter.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMCoroutines.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMipo.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMInstrumentation.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMVectorize.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMLinker.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMFrontendOpenMP.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMCodeGen.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMScalarOpts.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMInstCombine.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMObjCARCOpts.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMCodeGenTypes.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMBitWriter.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMAggressiveInstCombine.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMTransformUtils.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMWindowsDriver.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMJITLink.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMOption.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMExecutionEngine.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMTarget.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMAnalysis.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMProfileData.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMSymbolize.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDebugInfoBTF.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDebugInfoPDB.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDebugInfoMSF.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDebugInfoDWARF.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMRuntimeDyld.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMOrcTargetProcess.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMOrcShared.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMObject.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMTextAPI.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMMCParser.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMIRReader.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMAsmParser.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMBitReader.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMMC.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDebugInfoCodeView.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMCore.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMRemarks.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMBitstreamReader.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMBinaryFormat.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMTargetParser.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMSupport.lib)
link_libraries(D:/svn/bp.shanmin.com/co/llvm-18.1.1/build/Release/lib/LLVMDemangle.lib)


project ("colang")

# 将源代码添加到此项目的可执行文件。
add_executable (colang "colang.cpp" "colang.h" "lexer.h" "ast.h"  "ir.h" "lexer.cpp" "ast.cpp" )

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET colang PROPERTY CXX_STANDARD 20)
endif()

# TODO: 如有需要，请添加测试并安装目标。
